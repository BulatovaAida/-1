#Конструктор класса Queue() создает новую пустую очередь.
#Он создает пустой список, который будет использоваться для хранения элементов очереди.
class Queue:
    def __init__(self):
        self.queue = []

#Метод push() добавляет элемент в очередь. Он принимает в качестве аргумента элемент, который необходимо добавить в очередь.
#Эта строчка добавляет элемент item в конец списка self.queue.

    def push(self, item):
        self.queue.append(item)

#Метод pop() удаляет элемент из очереди. Он возвращает удаленный элемент.
#Эта строчка удаляет первый элемент из списка self.queue и возвращает его.
    def pop(self):
        return self.queue.pop(0)

#Метод peek() возвращает первый элемент в очереди без его удаления. Если очередь пуста, метод возвращает None.
#Эта строчка проверяет, пуста ли очередь. Если очередь пуста, метод возвращает None.
# В противном случае метод возвращает первый элемент из списка self.queue.
    def peek(self):
        if not self.queue:
            return None
        return self.queue[0]

#Метод size() возвращает количество элементов в очереди.
#Эта строчка возвращает длину списка self.queue.
    def size(self):
        return len(self.queue)

#Метод is_empty() возвращает True, если очередь пуста.
#В противном случае она возвращает False
    def is_empty(self):
        return not self.queue

#создается очередь и добавляются в нее три элемента: 1, 2 и 3.
# Затем производится просмотр первого элемента в очереди,
# удаление первого элемента из очереди,
# повторный просмотр первого элемента в очереди,
# получение размера очереди и проверка, пуста ли очередь.
queue = Queue()

queue.push(1)
queue.push(2)
queue.push(3)

print(queue.peek())  # 1
print(queue.pop())  # 1
print(queue.peek())  # 2

print(queue.size())  # 2
print(queue.is_empty())  # False
